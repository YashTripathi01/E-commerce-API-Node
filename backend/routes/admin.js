const router = require('express').Router()
const Order = require('../models/Order')
const User = require('../models/User')
const verifyTokenAdmin = require('../middleware/verifyTokenAdmin')


// GET USER STATS (total no. of users per month)
router.get('/stats', verifyTokenAdmin, async (req, res) => {
  const date = new Date()
  const lastYear = new Date(date.setFullYear(date.getFullYear() - 1))

  try {
    const data = await User.aggregate([
      { $match: { createdAt: { $gte: lastYear } } },
      {
        $project: {
          month: { $month: '$createdAt' }
        }
      },
      {
        $group: {
          _id: '$month',
          total: { $sum: 1 }
        }
      }
    ])
    res.status(200).json(data)

  } catch (error) {
    return res.status(500).json(error)
  }
})


// GET ALL ORDERS (order of all the users)
router.get('/orders', verifyTokenAdmin, async (req, res) => {
  try {
    const orders = await Order.find()
    return res.status(200).json(orders)

  } catch (error) {
    return res.status(500).json(error)
  }
}
)


// GET INCOME GENERATED BY ALL ORDERS
router.get('/income', verifyTokenAdmin, async (req, res) => {
  const date = new Date()
  const lastMonth = new Date(date.setMonth(date.getMonth() - 1))
  const previousMonth = new Date(new Date().setMonth(lastMonth.getMonth() - 1))

  try {
    const income = await Order.aggregate([
      { $match: { createdAt: { $gte: previousMonth } } },
      {
        $project: {
          month: { $month: '$createdAt' },
          sales: '$amount'
        }
      },
      {
        $group: {
          _id: '$month',
          total: { $sum: '$sales' }
        }
      }
    ])
    return res.status(200).json(income)

  } catch (error) {
    return res.status(500).json(error)
  }
})

module.exports = router
